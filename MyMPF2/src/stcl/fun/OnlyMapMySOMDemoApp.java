/*
 * SOMDemo.java
 *
 * Created on December 13, 2002, 2:31 PM
 */

package stcl.fun;


import java.awt.image.BufferedImage;
import java.util.Random;
import java.util.Vector;

import org.ejml.simple.SimpleMatrix;

import stcl.algo.poolers.SpatialPooler;
import stcl.algo.som.SOMMap;
import stcl.algo.util.Trainer;
import stcl.graphics.MapRenderer;

/**
 *
 * @author  alanter
 */
public class OnlyMapMySOMDemoApp extends javax.swing.JFrame {

	int size = 100;
	int iterations = 500;
	
	//private SOMTrainer trainer;
	private OnlyMapMySOMTrainer trainer;
	private SOMMap map;
	private Vector<SimpleMatrix> inputVectors;
	
	/** Creates new form SOMDemo */
	public OnlyMapMySOMDemoApp() {
		initComponents();
		SimpleMatrix tempVec;
		map = new SOMMap(size, size, 3, new Random());
		
		renderPanel.registerLattice(map);
		trainer = new OnlyMapMySOMTrainer();
		inputVectors = new Vector<SimpleMatrix>();

		// Make some colors.  Red, Green, Blue, Yellow, Purple, Black,
		// white, and gray
		tempVec = new SimpleMatrix(1,3);
		tempVec.set(0, 1);
		tempVec.set(1, 0);
		tempVec.set(2, 0);
		inputVectors.addElement(tempVec);
		tempVec = new SimpleMatrix(1,3);
		tempVec.set(0, 0);
		tempVec.set(1, 1);
		tempVec.set(2, 0);
		inputVectors.addElement(tempVec);
		tempVec = new SimpleMatrix(1,3);
		tempVec.set(0, 0);
		tempVec.set(1, 0);
		tempVec.set(2, 1);
		inputVectors.addElement(tempVec);
		tempVec = new SimpleMatrix(1,3);
		tempVec.set(0, 1);
		tempVec.set(1, 1);
		tempVec.set(2, 0);
		inputVectors.addElement(tempVec);
		tempVec = new SimpleMatrix(1,3);
		tempVec.set(0, 1);
		tempVec.set(1, 0);
		tempVec.set(2, 1);
		inputVectors.addElement(tempVec);
		tempVec = new SimpleMatrix(1,3);
		tempVec.set(0, 0);
		tempVec.set(1, 1);
		tempVec.set(2, 1);
		inputVectors.addElement(tempVec);
		tempVec = new SimpleMatrix(1,3);
		tempVec.set(0, 0);
		tempVec.set(1, 0);
		tempVec.set(2, 0);
		inputVectors.addElement(tempVec);
		tempVec = new SimpleMatrix(1,3);
		tempVec.set(0, 1);
		tempVec.set(1, 1);
		tempVec.set(2, 1);
		inputVectors.addElement(tempVec);
		tempVec = new SimpleMatrix(1,3);
		tempVec.set(0, 0.5);
		tempVec.set(1, 0.5);
		tempVec.set(2, 0.5);
		inputVectors.addElement(tempVec);

/*		// Make it four shades of red.
		tempVec = new SOMVector();
		tempVec.addElement(new Double(1));
		tempVec.addElement(new Double(0));
		tempVec.addElement(new Double(0));
		inputVectors.addElement(tempVec);
		tempVec = new SOMVector();
		tempVec.addElement(new Double(0.7));
		tempVec.addElement(new Double(0));
		tempVec.addElement(new Double(0));
		inputVectors.addElement(tempVec);
		tempVec = new SOMVector();
		tempVec.addElement(new Double(0.4));
		tempVec.addElement(new Double(0));
		tempVec.addElement(new Double(0));
		inputVectors.addElement(tempVec);
		tempVec = new SOMVector();
		tempVec.addElement(new Double(0.1));
		tempVec.addElement(new Double(0));
		tempVec.addElement(new Double(0));
		inputVectors.addElement(tempVec);
		tempVec = new SOMVector();
		tempVec.addElement(new Double(0));
		tempVec.addElement(new Double(0));
		tempVec.addElement(new Double(0));
		inputVectors.addElement(tempVec);
		*/
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    private void initComponents() {//GEN-BEGIN:initComponents
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        renderPanel = new MapRenderer();
        ControlsPanel = new javax.swing.JPanel();
        btnRetrain = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setTitle("SOM Demo");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jSplitPane1.setDividerLocation(400);
        jSplitPane1.setDividerSize(5);
        jSplitPane1.setEnabled(false);
        jPanel1.setLayout(new java.awt.CardLayout());

        renderPanel.setBackground(new java.awt.Color(0, 0, 0));
        renderPanel.setFont(new java.awt.Font("Dialog", 0, 11));
        renderPanel.setMinimumSize(new java.awt.Dimension(200, 200));
        jPanel1.add(renderPanel, "card2");

        jSplitPane1.setLeftComponent(jPanel1);

        btnRetrain.setText("Retrain Map");
        btnRetrain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetrainActionPerformed(evt);
            }
        });

        ControlsPanel.add(btnRetrain);

        jButton1.setText("Stop Training");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        ControlsPanel.add(jButton1);

        jSplitPane1.setRightComponent(ControlsPanel);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setSize(new java.awt.Dimension(550, 400));
        setLocation((screenSize.width-550)/2,(screenSize.height-400)/2);
    }//GEN-END:initComponents

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		trainer.stop();
	}//GEN-LAST:event_jButton1ActionPerformed

	private void btnRetrainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetrainActionPerformed
		trainer.stop();
		map = new SOMMap(size, size, 3, new Random());
		trainer.setTraining(map, inputVectors, renderPanel);
		renderPanel.registerLattice(map);
		trainer.start();
	}//GEN-LAST:event_btnRetrainActionPerformed

	/** Exit the Application */
	private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
		System.exit(0);
	}//GEN-LAST:event_exitForm

	/**
	 * @param args the command line arguments
	 */
	@SuppressWarnings("deprecation")
	public static void main(String args[]) {
		OnlyMapMySOMDemoApp theApp = new OnlyMapMySOMDemoApp();
		theApp.show();
		theApp.go();
		//new SOMDemoApp().show();
	}

	public void go() {
		BufferedImage i = renderPanel.getImage();
		renderPanel.registerLattice(map);
		renderPanel.render(map, 0);
		trainer.setTraining(map, inputVectors, renderPanel);
		trainer.start();
	}
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private MapRenderer renderPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JButton btnRetrain;
    private javax.swing.JPanel ControlsPanel;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

}
